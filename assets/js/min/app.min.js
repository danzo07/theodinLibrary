function openPopup(){document.querySelector(".pop-up").classList.add("show")}function closePopup(){document.querySelector(".pop-up").classList.remove("show")}openPopup(),closePopup();class Book{constructor(e,t,o){this.title=e,this.author=t,this.pages=o}}class UI{static displayBooks(){storage.getBooks().forEach((e=>UI.addBookToList(e)))}static addBookToList(e){const t=document.querySelector("#book-list"),o=document.createElement("tr");o.innerHTML=`\n\n      <td><span>Title</span>${e.title}</td>\n      <td><span>Author</span>${e.author}</td>\n      <td><span>Pages</span>${e.pages}</td>\n      <td class="td-4"><a href="#" class="delete">Delete</a></td>\n    `,t.appendChild(o)}static deleteBook(e){e.classList.contains("delete")&&e.parentElement.parentElement.remove()}static showAlert(e,t){const o=document.createElement("div");o.className=`alert alert-${t}`,o.appendChild(document.createTextNode(e));const s=document.querySelector(".sc-container"),a=document.querySelector(".pop-up");s.insertBefore(o,a),setTimeout((()=>document.querySelector(".alert").remove()),3e3)}static clearForm(){document.querySelector("#title").value="",document.querySelector("#author").value="",document.querySelector("#pages").value=""}}class storage{static getBooks(){let e;return e=null===localStorage.getItem("books")?[]:JSON.parse(localStorage.getItem("books")),e}static addBook(e){const t=storage.getBooks();t.push(e),localStorage.setItem("books",JSON.stringify(t))}static removeBook(e){const t=storage.getBooks();t.forEach(((o,s)=>{o.pages===e&&t.splice(s,1)})),localStorage.setItem("books",JSON.stringify(t))}}document.addEventListener("DOMContentLoaded",UI.displayBooks),document.querySelector(".pop-up").addEventListener("submit",(e=>{e.preventDefault();const t=document.querySelector("#title").value,o=document.querySelector("#author").value,s=document.querySelector("#pages").value;if(""===t||""===o||""===s)UI.showAlert("Enter fields","enterfields");else{const e=new Book(t,o,s);UI.addBookToList(e),storage.addBook(e),UI.showAlert("Book added","bookadded"),UI.clearForm(e)}})),document.querySelector("#book-list").addEventListener("click",(e=>{UI.deleteBook(e.target),storage.removeBook(e.target.parentElement.previousElementSibling.textContent),UI.showAlert("Book removed","bookremoved")}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
